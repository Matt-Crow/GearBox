using System.Text.Json;
using GearBox.Core.Model.Json;
using GearBox.Core.Model.Units;

namespace GearBox.Core.Model.Dynamic;

/// <summary>
/// Projectiles are generated by characters when they use attacks, and can inflict damage
/// </summary>
public class Projectile : IDynamicGameObject
{
    private readonly MobileBehavior _mobility;
    private readonly Distance _range;
    private readonly Attack _attack;
    private double _distanceTraveledInPixels = 0;
    private bool _hasCollided; 

    public Projectile(Coordinates coordinates, Velocity velocity, Distance range, Attack attack)
    {
        Body = new()
        {
            Location = coordinates
        };
        _attack = attack;
        Body.Collided += HandleCollision;
        _mobility = new(Body, velocity);
        _mobility.StartMovingIn(velocity.Angle); // MobileBehavior defaults to not moving
        _range = range;
        Serializer = new("projectile", Serialize);
        Termination = new(this, () => _hasCollided || _range.InPixels <= _distanceTraveledInPixels);
    }


    public Serializer Serializer { get; init; }
    public BodyBehavior Body { get; init; }
    public TerminateBehavior Termination { get; init; }
    

    private void HandleCollision(object? sender, CollideEventArgs e)
    {
        if (!_hasCollided && _attack.CanResolveAgainst(e.CollidedWith))
        {
            _attack.HandleCollision(sender, e);
            _hasCollided = true;
        }
    }
    
    public void Update()
    {
        _mobility.UpdateMovement();
        _distanceTraveledInPixels += _mobility.Velocity.Magnitude.InPixelsPerFrame;
    }

    private string Serialize(JsonSerializerOptions options)
    {
        var json = new ProjectileJson(
            Body.Location.XInPixels, 
            Body.Location.YInPixels
        );
        return JsonSerializer.Serialize(json, options);
    }
}